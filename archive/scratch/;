priority -50

# Common Words

# LEGEND - TODO get tags working
# -> |mathwords|
# -> |functions|
# -> |group theory|
# -> |counting|
# -> |properties|
# -> |general|
# -> |sets|
# -> |modular arithmetic|
# -> |geometric|
# -> |compsci |
# -> |statistics|


# *analysis*
snippet int "integral" w
integral $0
endsnippet

snippet c0 "continuous" w
continuous $0
endsnippet

# *logic*

snippet tru "truth" w
truth $0
endsnippet

snippet csq "consequence" w
consequence $0
endsnippet

snippet thm "theorem" w
${1:t}heorem $0
endsnippet

snippet imp "implies" w
implies
endsnippet

snippet val "valid" w
valid $0
endsnippet

snippet assi "assign(ment)" w
assign${1:ment} $0
endsnippet

snippet axi "axiom" w
axiom $0
endsnippet

snippet prop "proposition" w
proposition $0
endsnippet

snippet taut "tautology" w
tautology $0
endsnippet

# *mathwords*

snippet otw "otherwise" w
otherwise $0
endsnippet

snippet lang "language" w
language
endsnippet

snippet ccrt "concretely" w
concretely $0
endsnippet

snippet induc "induction" w
induction $0
endsnippet

snippet ins "inspection" w
inspection $0
endsnippet

snippet gr "graph" w
graph $0
endsnippet

snippet ojv "objective" w
objective $0
endsnippet

snippet ctn "contain" w
contain $0
endsnippet

snippet tot "total" w
total $0
endsnippet

snippet clo "close(st)" w
close${1:st}
endsnippet

snippet eqn "equation" w
equation $0
endsnippet

snippet thf "therefore" w
${1:t}herefore $0
endsnippet

snippet hn "hence" w
hence $0
endsnippet

snippet arv "arrive" w
arrive $0
endsnippet

snippet aw "as well" w
as well $0
endsnippet

snippet lat "latter" w
latter $0
endsnippet

snippet ical "identical" w
identical $0
endsnippet

snippet om "omit" w
omit $0
endsnippet

snippet con "construct(ion)" w
construct${1:ion} $0
endsnippet

snippet mp "map(ped)" w
map${1:ped} $0
endsnippet

snippet tog "together" w
together $0
endsnippet

snippet udr "under" w
under $0
endsnippet

snippet arb "arbitrary" w
arbitrary $0
endsnippet

snippet suff "sufficient" w
sufficient $0
endsnippet

snippet wrt "with respect to" w
with respect to $0
endsnippet

snippet can "canonical" w
canonical $0
endsnippet

snippet sm "same" w
same $0
endsnippet

snippet abs "absolute value" w
absolute value $0
endsnippet

snippet rem "remember" w
remember $0
endsnippet

snippet ele "element(s)" w
element${1:s} $0
endsnippet

snippet calc "calculate" w
calculate $0
endsnippet

snippet bal "but also" w
but also $0
endsnippet

snippet und "understand" w
understand $0
endsnippet

snippet pl "plus" w
plus $0
endsnippet

snippet tsm "times" w
times $0
endsnippet

snippet wch "which" w
which $0
endsnippet

snippet sta "statement" w
statement $0
endsnippet

snippet op "operation(s)" w
operation${1:s} $0
endsnippet

snippet perf "perform" w
perform $0
endsnippet

snippet q "question" w
question $0
endsnippet

snippet wri "written" w
written $0
endsnippet

snippet tir "their" w
their $0
endsnippet

snippet aprx "approx(imate)" w
approx${1:imate} $0
endsnippet

snippet dn "do not" w
do not $0
endsnippet

snippet dne "does not exist" w
does not exist $0
endsnippet

snippet cmpo "composition" w
composition $0
endsnippet

snippet clr "clearly" w
clearly $0
endsnippet

snippet ver "verified" w
verified $0
endsnippet

snippet hvnt "have not" w
have not $0
endsnippet

snippet smp "simply" w
simply $0
endsnippet

snippet bef "before" w
before $0
endsnippet

snippet cor "correct" w
correct $0
endsnippet

snippet simp "simplify(ing)" w
simplify${1:ing} $0
endsnippet

snippet cpt "compute" w
comput${1:ations} $0
endsnippet

snippet supp "correct" w
suppos${1:ing} $0
endsnippet

snippet ge "greater than or equal to" w
greater than or equal to $0
endsnippet

snippet le "less than or equal to" w
less than or equal to $0
endsnippet

snippet nm "namely" w
namely $0
endsnippet

snippet occ "occurs" w
occurs $0
endsnippet

snippet anz "analyze" w
analyze $0
endsnippet

snippet exp "expand" w
expand${1:ing} $0
endsnippet

snippet comm "commence" w
commence $0
endsnippet

snippet alg "algebra(ic)" w
algebra${1:ic} $0
endsnippet

snippet gmt "geometric" w
geometric $0
endsnippet

snippet idn "identity" w
identity $0
endsnippet

snippet resp "respectively" w
respectively $0
endsnippet

snippet disc "discussed" w
discussed $0
endsnippet

snippet desc "describe" w
describe $0
endsnippet

snippet wn "we note" w
${1:w}e note $0
endsnippet

snippet wc "(W/w)e commence" w
${1:w}e commence $0
endsnippet

snippet alt "alternate" w
alternat${1:ively} $0
endsnippet

snippet yld "yield(s)" w
yield${1:s} $0
endsnippet

snippet wy "which yields" w
which yields $0
endsnippet

snippet fst "first" w
first $0
endsnippet

snippet slv "solve" w
solve $0
endsnippet

snippet prev "previously" w
previously $0
endsnippet

snippet sat "satisfy" w
satisfy $0
endsnippet

snippet val "value(s)" w
value${1:s} $0
endsnippet

snippet poss "possible" w
possible $0
endsnippet

snippet incr "increas(ing)" w
increas${1:ing} $0
endsnippet

snippet fd "find(ing)" w
find${1:ing} $0
endsnippet

snippet giv "given" w
given $0
endsnippet

snippet mvr "moreover" w
${1:m}oreover $0
endsnippet

snippet corr "corresponding" w
corresponding $0
endsnippet

snippet app "appl(ying)" w
appl${1:ying} $0
endsnippet

snippet fac "factor" w
factor $0
endsnippet

snippet dir "direction" w
direction $0
endsnippet

snippet str "stretch(es)" w
stretch${1:es} $0
endsnippet

snippet abv "above" w
above $0
endsnippet

snippet on "only" w
only $0
endsnippet

snippet trv "trivial" w
trivial $0
endsnippet

snippet ntrv "trivial" w
non-trivial $0
endsnippet

snippet zo "zero(s)" w
zero${1:s} $0
endsnippet

snippet parti "particular" w
particular $0
endsnippet

snippet invo "invokes" w
invoke${1:s} $0
endsnippet

snippet indu "induce" w
induce${1:s} $0
endsnippet

snippet gen "generate" w
generate $0
endsnippet

snippet diag "diagonal" w
diagonal $0
endsnippet

snippet unq "unique" w
unique $0
endsnippet

snippet uni "union" w
union $0
endsnippet

snippet mtd "method" w
method $0
endsnippet

snippet gnt "guarenteed" w
guarenteed $0
endsnippet

snippet tri "triangle" w
triangle $0
endsnippet

snippet elem "elementary" w
elementary $0
endsnippet

snippet prcs "process" w
process $0
endsnippet

snippet pro "procedure" w
procedure $0
endsnippet

snippet eval "eval" w
evalulate $0
endsnippet

snippet equa "equation" w
equation $0
endsnippet

snippet eq "equal" w
equal $0
endsnippet

snippet iden "identity" w
identity $0
endsnippet

snippet lkw "likewise" w
likewise $0
endsnippet

snippet cnt "cannot" w
cannot $0
endsnippet

snippet imp "impossible" w
impossible $0
endsnippet

snippet exc "exceed" w
exceed $0
endsnippet

snippet proc "proceed" w
proceed $0
endsnippet

snippet no "number" w
number $0
endsnippet

snippet cons "consider" w
consider $0
endsnippet

snippet cnst "consists" w
consists $0
endsnippet

snippet ind "indeed" w
indeed $0
endsnippet

snippet rec "recall" w
${1:r}ecall $0
endsnippet

snippet recog "recognize" w
recognize $0
endsnippet

snippet dif "different" w
different $0
endsnippet

snippet orig "original" w
original $0
endsnippet


snippet vol "volume" w
volume $0
endsnippet


snippet lwr "lower" w
lower $0
endsnippet

snippet upr "upper" w
upper $0
endsnippet

snippet std "standard" w
standard $0
endsnippet

snippet sim "similar(ly)" w
similar${1:ly} $0
endsnippet

snippet simlt "simultaneously" w
simultaneously $0
endsnippet

snippet rep "represent" w
represent $0
endsnippet

snippet equi "equivalently" w
${1:e}quivalently $0
endsnippet


snippet inv "invert" w
invert${1:ible} $0
endsnippet

snippet len "length" w
length${1:s} $0
endsnippet

snippet defd "defined" w
defined $0
endsnippet

snippet def "definition" w
definition $0
endsnippet

snippet mul "multiplication" w
multipl${1:ication} $0
endsnippet

snippet muld "multiplied" w
multiplied $0
endsnippet

snippet mulpl "multiple(s)" w
multiple${1:s} $0
endsnippet

snippet div "division" w
division $0
endsnippet

snippet divd "divide" w
divide $0
endsnippet

snippet divi "divisible" w
divisible $0
endsnippet

snippet add "addition" w
addition $0
endsnippet

snippet subtr "subtraction" w
subtract${1:ion} $0
endsnippet

snippet subs "substituting" w
substitut${1:ing} $0
endsnippet

snippet substi "substituting" w
substitutable $0
endsnippet

snippet inc "incorrect" w
incorrect $0
endsnippet

snippet prop "propert(ies/y)" w
propert${1:ies} $0
endsnippet

snippet obs "observation" w
${1:o}bserv${2:ation} $0
endsnippet

snippet wo "we observe" w
${1:w}e observe $0
endsnippet

snippet conv "convert(s)" w
convert${1:s} $0
endsnippet

snippet min "minimum" w
minimum $0
endsnippet

snippet mini "minimize" w
minmize $0
endsnippet

snippet max "maximum" w
maximum $0
endsnippet

snippet maxi "maximize" w
maximize $0
endsnippet

snippet rhs "right hand side" w
right hand side $0
endsnippet

snippet lhs "left hand side" w
left hand side $0
endsnippet

snippet cw "clockwise" w
clockwise $0
endsnippet

snippet ccw "counter clockwise" w
counter clockwise $0
endsnippet

snippet rot "rotation" w
rotation $0
endsnippet

snippet refl "reflection" w
reflection $0
endsnippet

snippet refld "reflected" w
reflected $0
endsnippet

snippet th "that" w
that $0
endsnippet

snippet tn "then" w
then $0
endsnippet

snippet red "reduced" w
reduce${1:d} $0
endsnippet

snippet areq "as required" w
as required. $0
endsnippet

snippet prec "precisely" w
precisely $0
endsnippet

snippet req "require" w
require $0
endsnippet

snippet ti "that is" w
${1:t}hat is $0
endsnippet

snippet wt "what" w
what $0
endsnippet

snippet dt "determine(d)" w
determine${1:d} $0
endsnippet

snippet sn "since" w
since $0
endsnippet

snippet ts "thus" w
thus $0
endsnippet

snippet twh "thus we have" w
thus we have $0
endsnippet

snippet wah "we also have" w
we also have $0
endsnippet

snippet wa "we also" w
we also $0
endsnippet

snippet swk "so we know" w
so we know $0
endsnippet

snippet ws "we say" w
we say $0
endsnippet

snippet swh "so we have" w
so we have $0
endsnippet

snippet aswht "and so we have that" w
and so we have that $0
endsnippet

snippet ww "(W/w)e will" w
${1:w}e will $0
endsnippet

snippet Th "The" w
The $0
endsnippet

snippet ass "assum(e/ing)" w
${1:a}ssum${2:ing} $0
endsnippet

snippet wh "we have" w
${1:w}e have $0
endsnippet

snippet wk "we know" w
${1:w}e know $0
endsnippet

snippet twk "thus we know" w
${1:t}hus we know $0
endsnippet

snippet ho "hold(s)" w
hold${1:s} $0
endsnippet

snippet ia "is a" w
is a $0
endsnippet

snippet ina "is not a" w
is not a $0
endsnippet

snippet Ts "To show" w
To show $0
endsnippet

snippet wts "want to show" w
want to show $0
endsnippet

snippet wws "we will show" w
${1:w}e will show $0
endsnippet

snippet wms "we must show" w
${1:w}e must show $0
endsnippet

snippet whs "we have shown" w
${1:w}e have shown $0
endsnippet

snippet wwn "we will now" w
${1:w}e will now $0
endsnippet

snippet wwp "we will prove" w
${1:w}e will prove $0
endsnippet

snippet ift "it follows that" w
it follows that $0
endsnippet

snippet fol "following" w
follow${1:ing} $0
endsnippet

snippet st "such that" w
such that $0
endsnippet

snippet sot "so that" w
so that $0
endsnippet

snippet sotn "so then" w
so then $0
endsnippet

snippet rc "recall" w
recall $0
endsnippet

snippet bc "because" w
because $0
endsnippet

snippet bcm "become(s)" w
become${1:s} $0
endsnippet

snippet fa "for all" w
for all $0
endsnippet

snippet fe "for example" w
for example $0
endsnippet

snippet fay "for any" w
for any $0
endsnippet

snippet fs "for some" w
for some $0
endsnippet

snippet te "there exists" w
there exists $0
endsnippet

snippet ex "exist" w
exist${1:s} $0
endsnippet

snippet nex "not exist" w
not exist${1:s} $0
endsnippet

snippet twc "(T/t)hus we conclude" w
${1:t}hus we conclude $0
endsnippet

snippet wkt "we know that" w
${1:w}e know that $0
endsnippet

snippet var "variable" w
variable $0
endsnippet

snippet wlog "without loss of generality" w
without loss of generality $0
endsnippet

snippet chg "change" w
change${1:s}
endsnippet

# *functions*

snippet part "partition" w
partition $0
endsnippet

snippet dom "domain" w
domain $0
endsnippet

snippet cdom "codomain" w
codomain $0
endsnippet

snippet ran "range" w
range $0
endsnippet

snippet fun "function" w
function $0
endsnippet

snippet invs "inverse" w
inverse $0
endsnippet

snippet inj "injective" w
injective $0
endsnippet

snippet surj "surjective" w
surjective $0
endsnippet

snippet bij "bijective" w
bijective $0
endsnippet

snippet oto "one-to-one" w
one-to-one $0
endsnippet

# *sequences*

snippet cvgs "converges" w
converges $0
endsnippet

# *group theory*

snippet grp "group" w
group $0
endsnippet

snippet abel "abelian" w
abelian $0
endsnippet

snippet cmta "commutative" w
commutative $0
endsnippet

snippet cmuta "commutative" w
commutative $0
endsnippet

# *counting*

snippet comb "combination" w
combination $0
endsnippet

snippet perm "permutation" w
permutation $0
endsnippet

# *properties *

snippet commu "commutivity" w
commutivity $0
endsnippet

snippet assoc "associativity" w
associativity $0
endsnippet

snippet distp "distributive property" w
distributive property $0
endsnippet

# *general*

snippet recr "recurrence relation" w
recurrence relation $0
endsnippet

snippet rmk "remark" w
remark $0
endsnippet

snippet eqty "equality" w
equality $0
endsnippet

snippet form "formula" w
formula $0
endsnippet

snippet prv "prove" w
${1:p}rove $0
endsnippet

snippet mt "math" w
math${1:matical} $0
endsnippet

snippet prin "principle" w
principle $0
endsnippet

snippet nota "notation" w
notation $0
endsnippet

snippet ord "ordered" w
ordered $0
endsnippet

snippet tup "tuple" w
tuple $0
endsnippet

snippet comp "compare" w
compar${1:ing} $0
endsnippet

snippet dig "digits" w
digits $0
endsnippet

snippet sys "system" w
system $0
endsnippet

snippet coor "coordinate" w
coordinate${1:s} $0
endsnippet

snippet tw "twice" w
twice $0
endsnippet

snippet ht "height" w
height $0
endsnippet

snippet coe "coefficients" w
coefficients $0
endsnippet

snippet pos "positive" w
positive${1:ly} $0
endsnippet

snippet neg "negative" w
negative${1:ly} $0
endsnippet


snippet deg "degree" w
degree $0
endsnippet

snippet sol "solution(s)" w
solution${1:s} $0
endsnippet

snippet in "infinity" w
infinity $0
endsnippet

snippet inf "infinite" w
infinite $0
endsnippet

snippet polyn "polynomial" w
polynomial $0
endsnippet

snippet fin "finite" w
finite $0
endsnippet

snippet nz "non-zero" w
non-zero $0
endsnippet

snippet ctq "complete the square" w
complete the square $0
endsnippet

snippet dis "distinct" w
distinct $0
endsnippet

snippet prod "product" w
product $0
endsnippet

# *sets*

snippet rel "relation" w
relation $0
endsnippet

snippet rflx "reflexive" w
reflexive $0
endsnippet

snippet sym "symmetric" w
symmetric $0
endsnippet

snippet ttv "transitive" w
transitive $0
endsnippet		

snippet eqv "equivalence" Options
equivalence $0
endsnippet

snippet rat "rational" w
rational $0
endsnippet

snippet nat "natural" w
natural $0
endsnippet

snippet natn "natural numbers" w
natural numbers $0
endsnippet

snippet Rea "the Real Numbers" w
the Real Numbers $0
endsnippet

snippet Com "Real Numbers" w
complex numbers $0
endsnippet

snippet int "integer(s)" w
integer${1:s} $0
endsnippet

# *modular arithmetic*

snippet rmd "remainder" w
remainder $0
endsnippet

snippet mod "modulo" w
modulo $0
endsnippet

# *geometric*

snippet rhom "rhombus" w
rhombus $0
endsnippet

snippet rad "radius" w
radius $0
endsnippet

snippet circ "circumference" w
circumference $0
endsnippet

snippet rect "rectangle" w
rectangle $0
endsnippet

snippet cir "circle" w
circle $0
endsnippet

snippet ar "area" w
area $0
endsnippet

snippet dist "distance" w
distance $0
endsnippet

snippet ri "right" w
right $0
endsnippet

snippet ang "angle" w
angle $0
endsnippet

snippet quad "quadrant" w
quadrant $0
endsnippet

snippet Iq "first quadrant" w
first quadrant $0
endsnippet

snippet IIq "second quadrant" w
second quadrant $0
endsnippet

snippet IIIq "third quadrant" w
third quadrant $0
endsnippet

snippet IVq "fourth quadrant" w
fourth quadrant $0
endsnippet

snippet xa "x-axis" w
$x$-axis $0
endsnippet

snippet ya "y-axis" w
$y$-axis $0
endsnippet

snippet seg "segment" w
segment $0
endsnippet

snippet pt "point(s)" w
point${1:s} $0
endsnippet


snippet sq "square" w
square $0
endsnippet

snippet octa "octahedron" w
octahedron $0
endsnippet

snippet cb "cube" w
cube $0
endsnippet

snippet sph "sphere" w
sphere $0
endsnippet

snippet hyp "hypotenuse" w
hypotenuse $0
endsnippet

snippet ori "origin" w
origin $0
endsnippet

snippet locd "located" w
located $0
endsnippet

snippet lim "limit" w
limit $0
endsnippet

snippet log "logarithm" w
logarithm $0
endsnippet

# *compsci *

snippet recur "recursively" w
recursively
endsnippet

snippet char "character" w
character $0
endsnippet

snippet algo "algorithm" w
algorithm $0
endsnippet

snippet bin "binary" w
binary $0
endsnippet

snippet deci "decimal" w
decimal $0
endsnippet

# *calculus*

snippet cts "continuous" w
continuous $0
endsnippet

snippet nbd "neighbourhood" w
neighbourhood $0
endsnippet

snippet der "derivative" w
derivative $0
endsnippet

snippet sup "supremum" w
supremum $0
endsnippet

snippet inf "infimum" w
infimum $0
endsnippet

# *logic*

snippet imp "implication" w
implication $0
endsnippet

snippet bimp "bi-implication" w
bi-implication $0
endsnippet

snippet tr "true" w
true $0
endsnippet

snippet fl "false" w
false $0
endsnippet

snippet lem "lemma(s)" w
lemma${1:s} $0
endsnippet

snippet contrap "contrapositive" w
contrapositive $0
endsnippet

snippet a4c "assume for contradiction that" w
assume for contradiction that $0
endsnippet

snippet cont "contradiction" w
contradiction $0
endsnippet

snippet iff "if and only if" w
if and only if $0
endsnippet

snippet IH "Induction Hypothesis" w
Induction Hypothesis $0
endsnippet

# *linear algebra*

snippet col "column(s)" w
column${1:s} $0
endsnippet

snippet rred "row reduction" w
row reduction $0
endsnippet

snippet rref "reduced row echelon form" w
reduced row echelon form $0
endsnippet

snippet mat "matrix" w
matrix $0
endsnippet

snippet mats "matricies" w
matricies $0
endsnippet

snippet lc "linear combination" w
linear combination $0
endsnippet

snippet pl "plane" w
plane $0
endsnippet

snippet rnt "Rank Nullity Theorem" w
Rank Nullity Theorem $0
endsnippet

snippet ntlc "linear combination" w
non-trivial linear combination $0
endsnippet

snippet cxlc "convex linear combination" w
convex linear combination${1:s} $0
endsnippet

snippet piv "pivot(s)" w
pivot${1:s} $0
endsnippet

snippet lin "linear" w
linear $0
endsnippet

snippet li "linear independent" w
linear independent $0
endsnippet

snippet lyi "linearly independent" w
linearly independent $0
endsnippet

snippet lyd "linearly dependent" w
linearly dependent $0
endsnippet

snippet ld "linearly dependent" w
linear dependent $0
endsnippet

snippet sca "scalar" w
scalar${1:s} $0
endsnippet

snippet eibas "eigen basis" w
eigen basis $0
endsnippet

snippet eivec "eigen vector" w
eigen vector${1:s} $0
endsnippet

snippet eival "eigen value" w
eigen value${1:s} $0
endsnippet

snippet eisp "eigen space" w
eigen space $0
endsnippet

snippet sp "space" w
space $0
endsnippet

snippet geomul "geometric multiplicity" w
geometric multiplicity $0
endsnippet

snippet algmul "algebraic multiplicity" w
algebraic multiplicity $0
endsnippet

snippet ve "vector" w
vector${1:s} $0
endsnippet

snippet ba "basis" w
basis $0
endsnippet

snippet nsp "null space" w
null space $0
endsnippet

snippet csp "column space" w
column space $0
endsnippet

snippet rsp "row space" w
row space $0
endsnippet

snippet vsp "vector space" w
vector space $0
endsnippet

snippet proj "projection" w
project${1:ion} $0
endsnippet

snippet ker "kernel" w
kernel $0
endsnippet

snippet lt "linear transformation" w
linear transformation $0
endsnippet

snippet trns "transformation" w
transformation $0
endsnippet

snippet tpos "transpose" w
transpose $0
endsnippet

snippet vspace "vector space" w
vector space$0 $0
endsnippet

snippet dim "dimension" w
dimension${1:al} $0
endsnippet

snippet det "determinant" w
determinant $0
endsnippet

snippet chpoly "characteristic polynomial" w
characteristic polynomial $0
endsnippet

snippet im "image" w
image $0
endsnippet

snippet orth "orthogonal" w
orthogonal $0
endsnippet

snippet zv "zero vector" w
zero vector $0
endsnippet

snippet cpnt "component" w
component $0
endsnippet

snippet dgzbl "diagonalizable" w
diagonalizable $0
endsnippet

snippet dgzn "diagonalization" w
diagonalization $0
endsnippet

snippet utri "upper triangular" w
upper triangular $0
endsnippet

snippet ltri "lower triangular" w
lower triangular $0
endsnippet

snippet trir "triangular" w
triangular $0
endsnippet

snippet plp "parallelpiped" w
parallelpiped $0
endsnippet

snippet plg "parallelogram" w
parallelogram $0
endsnippet

snippet indp "independent" w
independent $0
endsnippet

snippet dep "dependent" w
dependent $0
endsnippet

snippet orie "oriented" w
oriented $0
endsnippet

# *statistics*
